// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Stytch.net.Models.Consumer
{
// Response type for `organizations.members.oauthProviders.google`.
    public class B2BOrganizationsMembersOAuthProvidersGoogleResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * Denotes the OAuth identity provider that the user has authenticated with, e.g. Google, Microsoft, GitHub
    * etc.
    */
      [JsonProperty("provider_type")]
      public required string ProviderType { get; set; }
      /**
    * The unique identifier for the User within a given OAuth provider. Also commonly called the `sub` or
    * "Subject field" in OAuth protocols.
    */
      [JsonProperty("provider_subject")]
      public required string ProviderSubject { get; set; }
      /**
    * The `id_token` returned by the OAuth provider. ID Tokens are JWTs that contain structured information
    * about a user. The exact content of each ID Token varies from provider to provider. ID Tokens are
    * returned from OAuth providers that conform to the [OpenID Connect](https://openid.net/foundation/)
    * specification, which is based on OAuth.
    */
      [JsonProperty("id_token")]
      public required string IdToken { get; set; }
      /**
    * The OAuth scopes included for a given provider. See each provider's section above to see which scopes
    * are included by default and how to add custom scopes.
    */
      [JsonProperty("scopes")]
      public required string Scopes { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      // The `access_token` that you may use to access the User's data in the provider's API.
      [JsonProperty("access_token")]
      public string? AccessToken { get; set; }
      // The number of seconds until the access token expires.
      [JsonProperty("access_token_expires_in")]
      public int? AccessTokenExpiresIn { get; set; }
      /**
    * The `refresh_token` that you may use to obtain a new `access_token` for the User within the provider's
    * API.
    */
      [JsonProperty("refresh_token")]
      public string? RefreshToken { get; set; }
    }
// Response type for `organizations.members.oauthProviders.microsoft`.
    public class B2BOrganizationsMembersOAuthProvidersMicrosoftResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * Denotes the OAuth identity provider that the user has authenticated with, e.g. Google, Microsoft, GitHub
    * etc.
    */
      [JsonProperty("provider_type")]
      public required string ProviderType { get; set; }
      /**
    * The unique identifier for the User within a given OAuth provider. Also commonly called the `sub` or
    * "Subject field" in OAuth protocols.
    */
      [JsonProperty("provider_subject")]
      public required string ProviderSubject { get; set; }
      // The `access_token` that you may use to access the User's data in the provider's API.
      [JsonProperty("access_token")]
      public required string AccessToken { get; set; }
      // The number of seconds until the access token expires.
      [JsonProperty("access_token_expires_in")]
      public required int AccessTokenExpiresIn { get; set; }
      /**
    * The `id_token` returned by the OAuth provider. ID Tokens are JWTs that contain structured information
    * about a user. The exact content of each ID Token varies from provider to provider. ID Tokens are
    * returned from OAuth providers that conform to the [OpenID Connect](https://openid.net/foundation/)
    * specification, which is based on OAuth.
    */
      [JsonProperty("id_token")]
      public required string IdToken { get; set; }
      /**
    * The OAuth scopes included for a given provider. See each provider's section above to see which scopes
    * are included by default and how to add custom scopes.
    */
      [JsonProperty("scopes")]
      public required string Scopes { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * The `refresh_token` that you may use to obtain a new `access_token` for the User within the provider's
    * API.
    */
      [JsonProperty("refresh_token")]
      public string? RefreshToken { get; set; }
    }
/**
    * Request type for `organizations.members.oauthProviders.google`,
    * `organizations.members.oauthProviders.microsoft`.
    */
    public class B2BOrganizationsMembersOAuthProvidersProviderInformationRequest {
      /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value.
    */
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      /**
    * Globally unique UUID that identifies a specific Member. The `member_id` is critical to perform
    * operations on a Member, so be sure to preserve this value.
    */
      [JsonProperty("member_id")]
      public required string MemberId { get; set; }
      /**
    * Whether to return the refresh token Stytch has stored for the OAuth Provider. Defaults to false.
    * **Important:** If your application exchanges the refresh token, Stytch may not be able to automatically
    * refresh access tokens in the future.
    */
      [JsonProperty("include_refresh_token")]
      public bool? IncludeRefreshToken { get; set; }
    }

}