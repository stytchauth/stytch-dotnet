// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Stytch.net.Models.Consumer
{
public class B2BSSOOIDCCreateConnectionRequestOptions {
      /**
    * Optional authorization object.
    * Pass in an active Stytch Member session token or session JWT and the request
    * will be run using that member's permissions.
    */
      [JsonProperty("authorization")]
      public Authorization? Authorization { get; set; }
    }
public class B2BSSOOIDCUpdateConnectionRequestOptions {
      /**
    * Optional authorization object.
    * Pass in an active Stytch Member session token or session JWT and the request
    * will be run using that member's permissions.
    */
      [JsonProperty("authorization")]
      public Authorization? Authorization { get; set; }
    }
// Request type for `sso.oidc.createConnection`.
    public class B2BSSOOIDCCreateConnectionRequest {
      /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value.
    */
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      // A human-readable display name for the connection.
      [JsonProperty("display_name")]
      public string? DisplayName { get; set; }
      /**
    * The identity provider of this connection. For OIDC, the accepted values are `generic`, `okta`, and
    * `microsoft-entra`. For SAML, the accepted values are `generic`, `okta`, `microsoft-entra`, and
    * `google-workspace`.
    */
      [JsonProperty("identity_provider")]
      public B2BSSOOIDCCreateConnectionRequestIdentityProvider? IdentityProvider { get; set; }
    }
// Response type for `sso.oidc.createConnection`.
    public class B2BSSOOIDCCreateConnectionResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * The `OIDC Connection` object affected by this API call. See the
    * [OIDC Connection Object](https://stytch.com/docs/b2b/api/oidc-connection-object) for complete response
    * field details.
    */
      [JsonProperty("connection")]
      public OIDCConnection? Connection { get; set; }
    }
// Request type for `sso.oidc.updateConnection`.
    public class B2BSSOOIDCUpdateConnectionRequest {
      /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value.
    */
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      // Globally unique UUID that identifies a specific SSO `connection_id` for a Member.
      [JsonProperty("connection_id")]
      public required string ConnectionId { get; set; }
      // A human-readable display name for the connection.
      [JsonProperty("display_name")]
      public string? DisplayName { get; set; }
      // The OAuth2.0 client ID used to authenticate login attempts. This will be provided by the IdP.
      [JsonProperty("client_id")]
      public string? ClientId { get; set; }
      /**
    * The secret belonging to the OAuth2.0 client used to authenticate login attempts. This will be provided
    * by the IdP.
    */
      [JsonProperty("client_secret")]
      public string? ClientSecret { get; set; }
      // A case-sensitive `https://` URL that uniquely identifies the IdP. This will be provided by the IdP.
      [JsonProperty("issuer")]
      public string? Issuer { get; set; }
      // The location of the URL that starts an OAuth login at the IdP. This will be provided by the IdP.
      [JsonProperty("authorization_url")]
      public string? AuthorizationURL { get; set; }
      /**
    * The location of the URL that issues OAuth2.0 access tokens and OIDC ID tokens. This will be provided by
    * the IdP.
    */
      [JsonProperty("token_url")]
      public string? TokenURL { get; set; }
      /**
    * The location of the IDP's
    * [UserInfo Endpoint](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo). This will be
    * provided by the IdP.
    */
      [JsonProperty("userinfo_url")]
      public string? UserinfoURL { get; set; }
      /**
    * The location of the IdP's JSON Web Key Set, used to verify credentials issued by the IdP. This will be
    * provided by the IdP.
    */
      [JsonProperty("jwks_url")]
      public string? JWKSURL { get; set; }
      /**
    * The identity provider of this connection. For OIDC, the accepted values are `generic`, `okta`, and
    * `microsoft-entra`. For SAML, the accepted values are `generic`, `okta`, `microsoft-entra`, and
    * `google-workspace`.
    */
      [JsonProperty("identity_provider")]
      public B2BSSOOIDCUpdateConnectionRequestIdentityProvider? IdentityProvider { get; set; }
    }
// Response type for `sso.oidc.updateConnection`.
    public class B2BSSOOIDCUpdateConnectionResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * The `OIDC Connection` object affected by this API call. See the
    * [OIDC Connection Object](https://stytch.com/docs/b2b/api/oidc-connection-object) for complete response
    * field details.
    */
      [JsonProperty("connection")]
      public OIDCConnection? Connection { get; set; }
      /**
    * If it is not possible to resolve the well-known metadata document from the OIDC issuer, this field will
    * explain what went wrong if the request is successful otherwise. In other words, even if the overall
    * request succeeds, there could be relevant warnings related to the connection update.
    */
      [JsonProperty("warning")]
      public string? Warning { get; set; }
    }

public enum B2BSSOOIDCCreateConnectionRequestIdentityProvider
    {
      [EnumMember(Value = "generic")]
      GENERIC,
      [EnumMember(Value = "okta")]
      OKTA,
      [EnumMember(Value = "microsoft-entra")]
      MICROSOFTENTRA,
      [EnumMember(Value = "google-workspace")]
      GOOGLEWORKSPACE,
    }
public enum B2BSSOOIDCUpdateConnectionRequestIdentityProvider
    {
      [EnumMember(Value = "generic")]
      GENERIC,
      [EnumMember(Value = "okta")]
      OKTA,
      [EnumMember(Value = "microsoft-entra")]
      MICROSOFTENTRA,
      [EnumMember(Value = "google-workspace")]
      GOOGLEWORKSPACE,
    }
}