// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Stytch.net.Models.Consumer
{
public class B2BSSOSAMLCreateConnectionRequestOptions {
      /**
    * Optional authorization object.
    * Pass in an active Stytch Member session token or session JWT and the request
    * will be run using that member's permissions.
    */
      [JsonProperty("authorization")]
      public Authorization? Authorization { get; set; }
    }
public class B2BSSOSAMLDeleteVerificationCertificateRequestOptions {
      /**
    * Optional authorization object.
    * Pass in an active Stytch Member session token or session JWT and the request
    * will be run using that member's permissions.
    */
      [JsonProperty("authorization")]
      public Authorization? Authorization { get; set; }
    }
public class B2BSSOSAMLUpdateByURLRequestOptions {
      /**
    * Optional authorization object.
    * Pass in an active Stytch Member session token or session JWT and the request
    * will be run using that member's permissions.
    */
      [JsonProperty("authorization")]
      public Authorization? Authorization { get; set; }
    }
public class B2BSSOSAMLUpdateConnectionRequestOptions {
      /**
    * Optional authorization object.
    * Pass in an active Stytch Member session token or session JWT and the request
    * will be run using that member's permissions.
    */
      [JsonProperty("authorization")]
      public Authorization? Authorization { get; set; }
    }
// Request type for `sso.saml.createConnection`.
    public class B2BSSOSAMLCreateConnectionRequest {
      /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value.
    */
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      // A human-readable display name for the connection.
      [JsonProperty("display_name")]
      public string? DisplayName { get; set; }
      /**
    * The identity provider of this connection. For OIDC, the accepted values are `generic`, `okta`, and
    * `microsoft-entra`. For SAML, the accepted values are `generic`, `okta`, `microsoft-entra`, and
    * `google-workspace`.
    */
      [JsonProperty("identity_provider")]
      public B2BSSOSAMLCreateConnectionRequestIdentityProvider? IdentityProvider { get; set; }
    }
// Response type for `sso.saml.createConnection`.
    public class B2BSSOSAMLCreateConnectionResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * The `SAML Connection` object affected by this API call. See the
    * [SAML Connection Object](https://stytch.com/docs/b2b/api/saml-connection-object) for complete response
    * field details.
    */
      [JsonProperty("connection")]
      public SAMLConnection? Connection { get; set; }
    }
// Request type for `sso.saml.deleteVerificationCertificate`.
    public class B2BSSOSAMLDeleteVerificationCertificateRequest {
      // The organization ID that the SAML connection belongs to.
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      // The ID of the SAML connection.
      [JsonProperty("connection_id")]
      public required string ConnectionId { get; set; }
      // The ID of the certificate to be deleted.
      [JsonProperty("certificate_id")]
      public required string CertificateId { get; set; }
    }
// Response type for `sso.saml.deleteVerificationCertificate`.
    public class B2BSSOSAMLDeleteVerificationCertificateResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      // The ID of the certificate that was deleted.
      [JsonProperty("certificate_id")]
      public required string CertificateId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
    }
// Request type for `sso.saml.updateByURL`.
    public class B2BSSOSAMLUpdateByURLRequest {
      /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value.
    */
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      // Globally unique UUID that identifies a specific SSO `connection_id` for a Member.
      [JsonProperty("connection_id")]
      public required string ConnectionId { get; set; }
      // A URL that points to the IdP metadata. This will be provided by the IdP.
      [JsonProperty("metadata_url")]
      public required string MetadataURL { get; set; }
    }
// Response type for `sso.saml.updateByURL`.
    public class B2BSSOSAMLUpdateByURLResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * The `SAML Connection` object affected by this API call. See the
    * [SAML Connection Object](https://stytch.com/docs/b2b/api/saml-connection-object) for complete response
    * field details.
    */
      [JsonProperty("connection")]
      public SAMLConnection? Connection { get; set; }
    }
// Request type for `sso.saml.updateConnection`.
    public class B2BSSOSAMLUpdateConnectionRequest {
      /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value.
    */
      [JsonProperty("organization_id")]
      public required string OrganizationId { get; set; }
      // Globally unique UUID that identifies a specific SSO `connection_id` for a Member.
      [JsonProperty("connection_id")]
      public required string ConnectionId { get; set; }
      // A globally unique name for the IdP. This will be provided by the IdP.
      [JsonProperty("idp_entity_id")]
      public string? IdpEntityId { get; set; }
      // A human-readable display name for the connection.
      [JsonProperty("display_name")]
      public string? DisplayName { get; set; }
      /**
    * An object that represents the attributes used to identify a Member. This object will map the IdP-defined
    * User attributes to Stytch-specific values. Required attributes: `email` and one of `full_name` or
    * `first_name` and `last_name`.
    */
      [JsonProperty("attribute_mapping")]
      public object? AttributeMapping { get; set; }
      /**
    * A certificate that Stytch will use to verify the sign-in assertion sent by the IdP, in
    * [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format. See our
    * [X509 guide](https://stytch.com/docs/b2b/api/saml-certificates) for more info.
    */
      [JsonProperty("x509_certificate")]
      public string? X509Certificate { get; set; }
      // The URL for which assertions for login requests will be sent. This will be provided by the IdP.
      [JsonProperty("idp_sso_url")]
      public string? IdpSSOURL { get; set; }
      /**
    * All Members who log in with this SAML connection will implicitly receive the specified Roles. See the
    * [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment) for more information about role
    * assignment.
    */
      [JsonProperty("saml_connection_implicit_role_assignments")]
      public SAMLConnectionImplicitRoleAssignment? SAMLConnectionImplicitRoleAssignments { get; set; }
      /**
    * Defines the names of the SAML groups
    *  that grant specific role assignments. For each group-Role pair, if a Member logs in with this SAML
    * connection and
    *  belongs to the specified SAML group, they will be granted the associated Role. See the
    *  [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment) for more information about role
    * assignment.
    *          Before adding any group implicit role assignments, you must add a "groups" key to your SAML
    * connection's
    *          `attribute_mapping`. Make sure that your IdP is configured to correctly send the group
    * information.
    */
      [JsonProperty("saml_group_implicit_role_assignments")]
      public SAMLGroupImplicitRoleAssignment? SAMLGroupImplicitRoleAssignments { get; set; }
      /**
    * An alternative URL to use for the Audience Restriction. This value can be used when you wish to migrate
    * an existing SAML integration to Stytch with zero downtime.
    */
      [JsonProperty("alternative_audience_uri")]
      public string? AlternativeAudienceUri { get; set; }
      /**
    * The identity provider of this connection. For OIDC, the accepted values are `generic`, `okta`, and
    * `microsoft-entra`. For SAML, the accepted values are `generic`, `okta`, `microsoft-entra`, and
    * `google-workspace`.
    */
      [JsonProperty("identity_provider")]
      public B2BSSOSAMLUpdateConnectionRequestIdentityProvider? IdentityProvider { get; set; }
    }
// Response type for `sso.saml.updateConnection`.
    public class B2BSSOSAMLUpdateConnectionResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * The `SAML Connection` object affected by this API call. See the
    * [SAML Connection Object](https://stytch.com/docs/b2b/api/saml-connection-object) for complete response
    * field details.
    */
      [JsonProperty("connection")]
      public SAMLConnection? Connection { get; set; }
    }

public enum B2BSSOSAMLCreateConnectionRequestIdentityProvider
    {
      [EnumMember(Value = "generic")]
      GENERIC,
      [EnumMember(Value = "okta")]
      OKTA,
      [EnumMember(Value = "microsoft-entra")]
      MICROSOFTENTRA,
      [EnumMember(Value = "google-workspace")]
      GOOGLEWORKSPACE,
    }
public enum B2BSSOSAMLUpdateConnectionRequestIdentityProvider
    {
      [EnumMember(Value = "generic")]
      GENERIC,
      [EnumMember(Value = "okta")]
      OKTA,
      [EnumMember(Value = "microsoft-entra")]
      MICROSOFTENTRA,
      [EnumMember(Value = "google-workspace")]
      GOOGLEWORKSPACE,
    }
}