// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Stytch.net.Models
{
    /// <summary>
    /// Request type for <see cref="Stytch.net.Clients.B2B.OTPs.Email.Discovery.Authenticate"/>..
    /// </summary>
    public class B2BOTPEmailDiscoveryAuthenticateRequest
    {
        /// <summary>
        /// The email address of the Member.
        /// </summary>
        [JsonProperty("email_address")]
        public string EmailAddress { get; set; }
        /// <summary>
        /// The code to authenticate.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        public B2BOTPEmailDiscoveryAuthenticateRequest(string emailAddress, string code)
        {
            this.EmailAddress = emailAddress;
            this.Code = code;
        }
    }
    /// <summary>
    /// Response type for <see cref="Stytch.net.Clients.B2B.OTPs.Email.Discovery.Authenticate"/>..
    /// </summary>
    public class B2BOTPEmailDiscoveryAuthenticateResponse
    {
        /// <summary>
        /// Globally unique UUID that is returned with every API call. This value is important to log for debugging
        /// purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
        /// </summary>
        [JsonProperty("request_id")]
        public string RequestId { get; set; }
        /// <summary>
        /// The Intermediate Session Token. This token does not necessarily belong to a specific instance of a
        /// Member, but represents a bag of factors that may be converted to a member session. The token can be used
        /// with the [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),
        /// [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp), or
        /// [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete an
        /// MFA flow and log in to the Organization. The token has a default expiry of 10 minutes. It can also be
        /// used with the
        /// [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)
        /// to join a specific Organization that allows the factors represented by the intermediate session token;
        /// or the
        /// [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to create a new Organization and Member. Intermediate Session Tokens have a default expiry of 10 minutes.
        /// </summary>
        [JsonProperty("intermediate_session_token")]
        public string IntermediateSessionToken { get; set; }
        /// <summary>
        /// The email address.
        /// </summary>
        [JsonProperty("email_address")]
        public string EmailAddress { get; set; }
        /// <summary>
        /// An array of `discovered_organization` objects tied to the `intermediate_session_token`, `session_token`,
        /// or `session_jwt`. See the
        /// [Discovered Organization Object](https://stytch.com/docs/b2b/api/discovered-organization-object) for
        /// complete details.
        ///       
        ///   Note that Organizations will only appear here under any of the following conditions:
        ///   1. The end user is already a Member of the Organization.
        ///   2. The end user is invited to the Organization. 
        ///   3. The end user can join the Organization because: 
        ///   
        ///       a) The Organization allows JIT provisioning.
        ///       
        ///       b) The Organizations' allowed domains list contains the Member's email domain.
        ///       
        ///       c) The Organization has at least one other Member with a verified email address with the same
        /// domain as the end user (to prevent phishing attacks).
        /// </summary>
        [JsonProperty("discovered_organizations")]
        public List<DiscoveredOrganization> DiscoveredOrganizations { get; set; }
        /// <summary>
        /// The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
        /// 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
        /// </summary>
        [JsonProperty("status_code")]
        public int StatusCode { get; set; }
    }
    /// <summary>
    /// Request type for <see cref="Stytch.net.Clients.B2B.OTPs.Email.Discovery.Send"/>..
    /// </summary>
    public class B2BOTPEmailDiscoverySendRequest
    {
        /// <summary>
        /// The email address to start the discovery flow for.
        /// </summary>
        [JsonProperty("email_address")]
        public string EmailAddress { get; set; }
        /// <summary>
        /// Use a custom template for login emails. By default, it will use your default email template. The
        /// template must be a template using our built-in customizations or a custom HTML email for OTP - Login.
        /// </summary>
        [JsonProperty("login_template_id")]
        public string LoginTemplateId { get; set; }
        /// <summary>
        /// Used to determine which language to use when sending the user this delivery method. Parameter is a
        /// [IETF BCP 47 language tag](https://www.w3.org/International/articles/language-tags/), e.g. `"en"`.
        /// 
        /// Currently supported languages are English (`"en"`), Spanish (`"es"`), French (`"fr"`) and Brazilian
        /// Portuguese (`"pt-br"`); if no value is provided, the copy defaults to English.
        /// 
        /// Request support for additional languages
        /// [here](https://docs.google.com/forms/d/e/1FAIpQLScZSpAu_m2AmLXRT3F3kap-s_mcV6UTBitYn6CdyWP0-o7YjQ/viewform?usp=sf_link")!
        /// 
        /// </summary>
        [JsonProperty("locale")]
        public B2BOTPEmailDiscoverySendRequestLocale? Locale { get; set; }
        /// <summary>
        /// The expiration time, in minutes, for a discovery OTP email. If not accepted within this time frame, the
        /// OTP will need to be resent. Defaults to 10 with a minimum of 2 and a maximum of 15.
        /// </summary>
        [JsonProperty("discovery_expiration_minutes")]
        public uint? DiscoveryExpirationMinutes { get; set; }
        public B2BOTPEmailDiscoverySendRequest(string emailAddress)
        {
            this.EmailAddress = emailAddress;
        }
    }
    /// <summary>
    /// Response type for <see cref="Stytch.net.Clients.B2B.OTPs.Email.Discovery.Send"/>..
    /// </summary>
    public class B2BOTPEmailDiscoverySendResponse
    {
        /// <summary>
        /// Globally unique UUID that is returned with every API call. This value is important to log for debugging
        /// purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
        /// </summary>
        [JsonProperty("request_id")]
        public string RequestId { get; set; }
        /// <summary>
        /// The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
        /// 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
        /// </summary>
        [JsonProperty("status_code")]
        public int StatusCode { get; set; }
    }

    [JsonConverter(typeof(StringEnumConverter))]
    public enum B2BOTPEmailDiscoverySendRequestLocale
    {
        [EnumMember(Value = "en")]
        EN,
        [EnumMember(Value = "es")]
        ES,
        [EnumMember(Value = "pt-br")]
        PTBR,
        [EnumMember(Value = "fr")]
        FR,
    }
}
