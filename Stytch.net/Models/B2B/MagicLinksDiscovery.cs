// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Stytch.net.Models.Consumer
{
// Request type for `magicLinks.discovery.authenticate`.
    public class B2BMagicLinksDiscoveryAuthenticateRequest {
      // The Discovery Email Magic Link token to authenticate.
      [JsonProperty("discovery_magic_links_token")]
      public required string DiscoveryMagicLinksToken { get; set; }
      // A base64url encoded one time secret used to validate that the request starts and ends on the same device.
      [JsonProperty("pkce_code_verifier")]
      public string? PkceCodeVerifier { get; set; }
    }
// Response type for `magicLinks.discovery.authenticate`.
    public class B2BMagicLinksDiscoveryAuthenticateResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      /**
    * The Intermediate Session Token. This token does not necessarily belong to a specific instance of a
    * Member, but represents a bag of factors that may be converted to a member session. The token can be used
    * with the [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),
    * [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp), or
    * [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete an
    * MFA flow and log in to the Organization. It can also be used with the
    * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)
    * to join a specific Organization that allows the factors represented by the intermediate session token;
    * or the
    * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to create a new Organization and Member.
    */
      [JsonProperty("intermediate_session_token")]
      public required string IntermediateSessionToken { get; set; }
      // The email address.
      [JsonProperty("email_address")]
      public required string EmailAddress { get; set; }
      /**
    * An array of `discovered_organization` objects tied to the `intermediate_session_token`, `session_token`,
    * or `session_jwt`. See the
    * [Discovered Organization Object](https://stytch.com/docs/b2b/api/discovered-organization-object) for
    * complete details.
    *       
    *   Note that Organizations will only appear here under any of the following conditions:
    *   1. The end user is already a Member of the Organization.
    *   2. The end user is invited to the Organization. 
    *   3. The end user can join the Organization because: 
    *   
    *       a) The Organization allows JIT provisioning.
    *       
    *       b) The Organizations' allowed domains list contains the Member's email domain.
    *       
    *       c) The Organization has at least one other Member with a verified email address with the same
    * domain as the end user (to prevent phishing attacks).
    */
      [JsonProperty("discovered_organizations")]
      public required DiscoveredOrganization DiscoveredOrganizations { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
    }

}