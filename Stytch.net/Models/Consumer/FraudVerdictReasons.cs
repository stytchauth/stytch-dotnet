// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Stytch.net.Models
{
    /// <summary>
    /// Request type for <see cref="Stytch.net.Clients.Consumer.Fraud.VerdictReasons.List"/>..
    /// </summary>
    public class FraudVerdictReasonsListRequest
    {
        /// <summary>
        /// Whether to return only verdict reasons that have overrides set. Defaults to false.
        /// </summary>
        [JsonProperty("overrides_only")]
        public bool? OverridesOnly { get; set; }
        public FraudVerdictReasonsListRequest()
        {
        }
    }
    /// <summary>
    /// Response type for <see cref="Stytch.net.Clients.Consumer.Fraud.VerdictReasons.List"/>..
    /// </summary>
    public class FraudVerdictReasonsListResponse
    {
        /// <summary>
        /// Globally unique UUID that is returned with every API call. This value is important to log for debugging
        /// purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
        /// </summary>
        [JsonProperty("request_id")]
        public string RequestId { get; set; }
        /// <summary>
        /// Information about verdict reasons and any overrides that were set on them.
        /// </summary>
        [JsonProperty("verdict_reason_actions")]
        public List<VerdictReasonAction> VerdictReasonActions { get; set; }
        /// <summary>
        /// The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
        /// 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
        /// </summary>
        [JsonProperty("status_code")]
        public int StatusCode { get; set; }
    }
    /// <summary>
    /// Request type for <see cref="Stytch.net.Clients.Consumer.Fraud.VerdictReasons.Override"/>..
    /// </summary>
    public class FraudVerdictReasonsOverrideRequest
    {
        /// <summary>
        /// The verdict reason that you wish to override. For a list of possible reasons to override, see
        /// [Warning Flags (Verdict Reasons)](https://stytch.com/docs/docs/fraud/guides/device-fingerprinting/reference/warning-flags-verdict-reasons). You may not override the `RULE_MATCH` reason.
        /// </summary>
        [JsonProperty("verdict_reason")]
        public string VerdictReason { get; set; }
        /// <summary>
        /// The action that you want to be returned for the specified verdict reason. The override action must be
        /// one of `ALLOW`, `BLOCK`, or `CHALLENGE`.
        /// </summary>
        [JsonProperty("override_action")]
        public OverrideRequestAction OverrideAction { get; set; }
        /// <summary>
        /// An optional description for the verdict reason override.
        /// </summary>
        [JsonProperty("override_description")]
        public string OverrideDescription { get; set; }
        public FraudVerdictReasonsOverrideRequest(string verdictReason, OverrideRequestAction overrideAction)
        {
            this.VerdictReason = verdictReason;
            this.OverrideAction = overrideAction;
        }
    }
    /// <summary>
    /// Response type for <see cref="Stytch.net.Clients.Consumer.Fraud.VerdictReasons.Override"/>..
    /// </summary>
    public class FraudVerdictReasonsOverrideResponse
    {
        /// <summary>
        /// Globally unique UUID that is returned with every API call. This value is important to log for debugging
        /// purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
        /// </summary>
        [JsonProperty("request_id")]
        public string RequestId { get; set; }
        /// <summary>
        /// Information about the verdict reason override that was just set.
        /// </summary>
        [JsonProperty("verdict_reason_action")]
        public VerdictReasonAction VerdictReasonAction { get; set; }
        /// <summary>
        /// The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
        /// 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
        /// </summary>
        [JsonProperty("status_code")]
        public int StatusCode { get; set; }
    }

    [JsonConverter(typeof(StringEnumConverter))]
    public enum OverrideRequestAction
    {
        [EnumMember(Value = "ALLOW")]
        ALLOW,
        [EnumMember(Value = "CHALLENGE")]
        CHALLENGE,
        [EnumMember(Value = "BLOCK")]
        BLOCK,
        [EnumMember(Value = "NONE")]
        NONE,
    }
}
