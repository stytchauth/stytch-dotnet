// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Stytch.net.Models.Consumer
{
    public class FraudVerdictReasonsListRequest
    {
        [JsonProperty("overrides_only")]
        public bool? OverridesOnly { get; set; }
        public FraudVerdictReasonsListRequest()
        {
        }
    }
    public class FraudVerdictReasonsListResponse
    {
        [JsonProperty("request_id")]
        public string RequestId { get; set; }
        [JsonProperty("verdict_reason_actions")]
        public List<VerdictReasonAction> VerdictReasonActions { get; set; }
        [JsonProperty("status_code")]
        public int StatusCode { get; set; }
    }
    public class FraudVerdictReasonsOverrideRequest
    {
        [JsonProperty("verdict_reason")]
        public string VerdictReason { get; set; }
        [JsonProperty("override_action")]
        public OverrideRequestAction OverrideAction { get; set; }
        [JsonProperty("override_description")]
        public string OverrideDescription { get; set; }
        public FraudVerdictReasonsOverrideRequest(string verdictReason, OverrideRequestAction overrideAction)
        {
            this.VerdictReason = verdictReason;
            this.OverrideAction = overrideAction;
        }
    }
    public class FraudVerdictReasonsOverrideResponse
    {
        [JsonProperty("request_id")]
        public string RequestId { get; set; }
        [JsonProperty("verdict_reason_action")]
        public VerdictReasonAction VerdictReasonAction { get; set; }
        [JsonProperty("status_code")]
        public int StatusCode { get; set; }
    }

    [JsonConverter(typeof(StringEnumConverter))]
    public enum OverrideRequestAction
    {
        [EnumMember(Value = "ALLOW")]
        ALLOW,
        [EnumMember(Value = "CHALLENGE")]
        CHALLENGE,
        [EnumMember(Value = "BLOCK")]
        BLOCK,
        [EnumMember(Value = "NONE")]
        NONE,
    }
}
