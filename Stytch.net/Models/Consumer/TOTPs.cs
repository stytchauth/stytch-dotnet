// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Stytch.net.Models.Consumer
{
public class TOTPWithRecoveryCodes {
      // The unique ID for a TOTP instance.
      [JsonProperty("totp_id")]
      public required string TOTPId { get; set; }
      /**
    * The verified boolean denotes whether or not this send method, e.g. phone number, email address, etc.,
    * has been successfully authenticated by the User.
    */
      [JsonProperty("verified")]
      public required bool Verified { get; set; }
      // The recovery codes used to authenticate the user without an authenticator app.
      [JsonProperty("recovery_codes")]
      public required string RecoveryCodes { get; set; }
    }
// Request type for `totps.authenticate`.
    public class TOTPsAuthenticateRequest {
      // The `user_id` of an active user the TOTP registration should be tied to.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      // The TOTP code to authenticate. The TOTP code should consist of 6 digits.
      [JsonProperty("totp_code")]
      public required string TOTPCode { get; set; }
      // The `session_token` associated with a User's existing Session.
      [JsonProperty("session_token")]
      public string? SessionToken { get; set; }
      /**
    * Set the session lifetime to be this many minutes from now. This will start a new session if one doesn't
    * already exist, 
    *   returning both an opaque `session_token` and `session_jwt` for this session. Remember that the
    * `session_jwt` will have a fixed lifetime of
    *   five minutes regardless of the underlying session duration, and will need to be refreshed over time.
    * 
    *   This value must be a minimum of 5 and a maximum of 527040 minutes (366 days).
    *   
    *   If a `session_token` or `session_jwt` is provided then a successful authentication will continue to
    * extend the session this many minutes.
    *   
    *   If the `session_duration_minutes` parameter is not specified, a Stytch session will not be created.
    */
      [JsonProperty("session_duration_minutes")]
      public int? SessionDurationMinutes { get; set; }
      // The `session_jwt` associated with a User's existing Session.
      [JsonProperty("session_jwt")]
      public string? SessionJwt { get; set; }
      /**
    * Add a custom claims map to the Session being authenticated. Claims are only created if a Session is
    * initialized by providing a value in `session_duration_minutes`. Claims will be included on the Session
    * object and in the JWT. To update a key in an existing Session, supply a new value. To delete a key,
    * supply a null value.
    * 
    *   Custom claims made with reserved claims ("iss", "sub", "aud", "exp", "nbf", "iat", "jti") will be
    * ignored. Total custom claims size cannot exceed four kilobytes.
    */
      [JsonProperty("session_custom_claims")]
      public object? SessionCustomClaims { get; set; }
    }
// Response type for `totps.authenticate`.
    public class TOTPsAuthenticateResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      // The unique ID of the affected User.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      // A secret token for a given Stytch Session.
      [JsonProperty("session_token")]
      public required string SessionToken { get; set; }
      // The unique ID for a TOTP instance.
      [JsonProperty("totp_id")]
      public required string TOTPId { get; set; }
      // The JSON Web Token (JWT) for a given Stytch Session.
      [JsonProperty("session_jwt")]
      public required string SessionJwt { get; set; }
      /**
    * The `user` object affected by this API call. See the
    * [Get user endpoint](https://stytch.com/docs/api/get-user) for complete response field details.
    */
      [JsonProperty("user")]
      public required User User { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * If you initiate a Session, by including `session_duration_minutes` in your authenticate call, you'll
    * receive a full Session object in the response.
    * 
    *   See [GET sessions](https://stytch.com/docs/api/session-get) for complete response fields.
    *   
    */
      [JsonProperty("session")]
      public Session? Session { get; set; }
    }
// Request type for `totps.create`.
    public class TOTPsCreateRequest {
      // The `user_id` of an active user the TOTP registration should be tied to.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      /**
    * The expiration for the TOTP instance. If the newly created TOTP is not authenticated within this time
    * frame the TOTP will be unusable. Defaults to 1440 (1 day) with a minimum of 5 and a maximum of 1440.
    */
      [JsonProperty("expiration_minutes")]
      public int? ExpirationMinutes { get; set; }
    }
// Response type for `totps.create`.
    public class TOTPsCreateResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      // The unique ID for a TOTP instance.
      [JsonProperty("totp_id")]
      public required string TOTPId { get; set; }
      // The TOTP secret key shared between the authenticator app and the server used to generate TOTP codes.
      [JsonProperty("secret")]
      public required string Secret { get; set; }
      // The QR code image encoded in base64.
      [JsonProperty("qr_code")]
      public required string QrCode { get; set; }
      // The recovery codes used to authenticate the user without an authenticator app.
      [JsonProperty("recovery_codes")]
      public required string RecoveryCodes { get; set; }
      /**
    * The `user` object affected by this API call. See the
    * [Get user endpoint](https://stytch.com/docs/api/get-user) for complete response field details.
    */
      [JsonProperty("user")]
      public required User User { get; set; }
      // The unique ID of the affected User.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
    }
// Request type for `totps.recover`.
    public class TOTPsRecoverRequest {
      // The `user_id` of an active user the TOTP registration should be tied to.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      // The recovery code to authenticate.
      [JsonProperty("recovery_code")]
      public required string RecoveryCode { get; set; }
      // The `session_token` associated with a User's existing Session.
      [JsonProperty("session_token")]
      public string? SessionToken { get; set; }
      /**
    * Set the session lifetime to be this many minutes from now. This will start a new session if one doesn't
    * already exist, 
    *   returning both an opaque `session_token` and `session_jwt` for this session. Remember that the
    * `session_jwt` will have a fixed lifetime of
    *   five minutes regardless of the underlying session duration, and will need to be refreshed over time.
    * 
    *   This value must be a minimum of 5 and a maximum of 527040 minutes (366 days).
    *   
    *   If a `session_token` or `session_jwt` is provided then a successful authentication will continue to
    * extend the session this many minutes.
    *   
    *   If the `session_duration_minutes` parameter is not specified, a Stytch session will not be created.
    */
      [JsonProperty("session_duration_minutes")]
      public int? SessionDurationMinutes { get; set; }
      // The `session_jwt` associated with a User's existing Session.
      [JsonProperty("session_jwt")]
      public string? SessionJwt { get; set; }
      /**
    * Add a custom claims map to the Session being authenticated. Claims are only created if a Session is
    * initialized by providing a value in `session_duration_minutes`. Claims will be included on the Session
    * object and in the JWT. To update a key in an existing Session, supply a new value. To delete a key,
    * supply a null value.
    * 
    *   Custom claims made with reserved claims ("iss", "sub", "aud", "exp", "nbf", "iat", "jti") will be
    * ignored. Total custom claims size cannot exceed four kilobytes.
    */
      [JsonProperty("session_custom_claims")]
      public object? SessionCustomClaims { get; set; }
    }
// Response type for `totps.recover`.
    public class TOTPsRecoverResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      // The unique ID for a TOTP instance.
      [JsonProperty("totp_id")]
      public required string TOTPId { get; set; }
      // The unique ID of the affected User.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      // A secret token for a given Stytch Session.
      [JsonProperty("session_token")]
      public required string SessionToken { get; set; }
      // The JSON Web Token (JWT) for a given Stytch Session.
      [JsonProperty("session_jwt")]
      public required string SessionJwt { get; set; }
      /**
    * The `user` object affected by this API call. See the
    * [Get user endpoint](https://stytch.com/docs/api/get-user) for complete response field details.
    */
      [JsonProperty("user")]
      public required User User { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
      /**
    * If you initiate a Session, by including `session_duration_minutes` in your authenticate call, you'll
    * receive a full Session object in the response.
    * 
    *   See [GET sessions](https://stytch.com/docs/api/session-get) for complete response fields.
    *   
    */
      [JsonProperty("session")]
      public Session? Session { get; set; }
    }
// Request type for `totps.recoveryCodes`.
    public class TOTPsRecoveryCodesRequest {
      // The `user_id` of an active user the TOTP registration should be tied to.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
    }
// Response type for `totps.recoveryCodes`.
    public class TOTPsRecoveryCodesResponse {
      /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
    */
      [JsonProperty("request_id")]
      public required string RequestId { get; set; }
      // The unique ID of the affected User.
      [JsonProperty("user_id")]
      public required string UserId { get; set; }
      /**
    * An array containing a list of all TOTP instances (along with their recovery codes) for a given User in
    * the Stytch API.
    */
      [JsonProperty("totps")]
      public required TOTPWithRecoveryCodes TOTPs { get; set; }
      /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
    */
      [JsonProperty("status_code")]
      public required int StatusCode { get; set; }
    }

}