// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

using Newtonsoft.Json;
using Stytch.net.Models.Consumer;
using System.Text;




namespace Stytch.net.Clients.B2B
{
    public class PasswordsSessions
    {
        private readonly HttpClient _httpClient;
        public PasswordsSessions(HttpClient client)
        {
            _httpClient = client;
        }

        /// <summary>
        /// Reset the Member's password using their existing session. The endpoint will error if the session does
        /// not contain an authentication factor that has been issued within the last 5 minutes. Either
        /// `session_token` or `session_jwt` should be provided.
        /// 
        /// Note that a successful password reset via an existing session will revoke all active sessions for the
        /// `member_id`, except for the one used during the reset flow.
        /// </summary>
        public async Task<B2BPasswordsSessionResetResponse> Reset(
            B2BPasswordsSessionResetRequest request)
        {
            var method = HttpMethod.Post;
            var uriBuilder = new UriBuilder($"/v1/b2b/passwords/session/reset");

            var httpReq = new HttpRequestMessage(method, uriBuilder.ToString());
            var jsonBody = JsonConvert.SerializeObject(request);
            var content = new StringContent(jsonBody, Encoding.UTF8, "application/json");
            httpReq.Content = content;

            var response = await _httpClient.SendAsync(httpReq);
            var responseBody = await response.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode)
            {
                return JsonConvert.DeserializeObject<B2BPasswordsSessionResetResponse>(responseBody)!;
            }
            else
            {
                // Optionally, throw an exception or return null or an error object
                throw new HttpRequestException(
                    $"Request failed with status code {response.StatusCode}: {responseBody}");
            }
        }

    }

}

